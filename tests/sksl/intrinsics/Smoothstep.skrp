store_src_rg                   coords = src.rg
init_lane_masks                CondMask = LoopMask = RetMask = true
copy_constant                  constVal(0) = 0xBFA00000 (-1.25)
copy_constant                  constVal(1) = 0
copy_constant                  constVal(2) = 0x3F400000 (0.75)
copy_constant                  constVal(3) = 0x40100000 (2.25)
splat_2_constants              expectedA(0..1) = 0
copy_constant                  expectedA(2) = 0x3F580000 (0.84375)
splat_2_constants              expectedA(3), expectedB(0) = 0x3F800000 (1.0)
copy_constant                  expectedB(1) = 0
splat_2_constants              expectedB(2..3) = 0x3F800000 (1.0)
copy_slot_unmasked             $0 = expectedA(0)
cmpeq_imm_float                $0 = equal($0, 0)
splat_2_constants              $1..2 = 0
copy_2_slots_unmasked          $3..4 = expectedA(0..1)
cmpeq_2_floats                 $1..2 = equal($1..2, $3..4)
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
splat_2_constants              $1..2 = 0
copy_constant                  $3 = 0x3F580000 (0.84375)
copy_3_slots_unmasked          $4..6 = expectedA(0..2)
cmpeq_3_floats                 $1..3 = equal($1..3, $4..6)
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
splat_2_constants              $1..2 = 0
copy_constant                  $3 = 0x3F580000 (0.84375)
copy_constant                  $4 = 0x3F800000 (1.0)
copy_4_slots_unmasked          $5..8 = expectedA
cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
bitwise_and_2_ints             $1..2 &= $3..4
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_slot_unmasked             $1 = expectedA(0)
cmpeq_imm_float                $1 = equal($1, 0)
bitwise_and_int                $0 &= $1
splat_2_constants              $1..2 = 0
copy_2_slots_unmasked          $3..4 = expectedA(0..1)
cmpeq_2_floats                 $1..2 = equal($1..2, $3..4)
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
splat_2_constants              $1..2 = 0
copy_constant                  $3 = 0x3F580000 (0.84375)
copy_3_slots_unmasked          $4..6 = expectedA(0..2)
cmpeq_3_floats                 $1..3 = equal($1..3, $4..6)
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
splat_2_constants              $1..2 = 0
copy_constant                  $3 = 0x3F580000 (0.84375)
copy_constant                  $4 = 0x3F800000 (1.0)
copy_4_slots_unmasked          $5..8 = expectedA
cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
bitwise_and_2_ints             $1..2 &= $3..4
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_uniform                   $1 = colorRed(1)
copy_uniform                   $2 = colorGreen(1)
copy_constant                  $3 = 0xBFA00000 (-1.25)
smoothstep_n_floats            $1 = smoothstep($1, $2, $3)
copy_slot_unmasked             $2 = expectedA(0)
cmpeq_float                    $1 = equal($1, $2)
bitwise_and_int                $0 &= $1
copy_uniform                   $1 = colorRed(1)
copy_slot_unmasked             $2 = $1
copy_uniform                   $3 = colorGreen(1)
copy_slot_unmasked             $4 = $3
copy_constant                  $5 = 0xBFA00000 (-1.25)
copy_constant                  $6 = 0
smoothstep_n_floats            $1..2 = smoothstep($1..2, $3..4, $5..6)
copy_2_slots_unmasked          $3..4 = expectedA(0..1)
cmpeq_2_floats                 $1..2 = equal($1..2, $3..4)
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_uniform                   $1 = colorRed(1)
swizzle_3                      $1..3 = ($1..3).xxx
copy_uniform                   $4 = colorGreen(1)
swizzle_3                      $4..6 = ($4..6).xxx
copy_constant                  $7 = 0xBFA00000 (-1.25)
copy_constant                  $8 = 0
copy_constant                  $9 = 0x3F400000 (0.75)
smoothstep_n_floats            $1..3 = smoothstep($1..3, $4..6, $7..9)
copy_3_slots_unmasked          $4..6 = expectedA(0..2)
cmpeq_3_floats                 $1..3 = equal($1..3, $4..6)
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_uniform                   $1 = colorRed(1)
swizzle_4                      $1..4 = ($1..4).xxxx
copy_uniform                   $5 = colorGreen(1)
swizzle_4                      $5..8 = ($5..8).xxxx
copy_4_slots_unmasked          $9..12 = constVal
smoothstep_n_floats            $1..4 = smoothstep($1..4, $5..8, $9..12)
copy_4_slots_unmasked          $5..8 = expectedA
cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
bitwise_and_2_ints             $1..2 &= $3..4
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_slot_unmasked             $1 = expectedB(0)
cmpeq_imm_float                $1 = equal($1, 0x3F800000 (1.0))
bitwise_and_int                $0 &= $1
copy_constant                  $1 = 0x3F800000 (1.0)
copy_constant                  $2 = 0
copy_2_slots_unmasked          $3..4 = expectedB(0..1)
cmpeq_2_floats                 $1..2 = equal($1..2, $3..4)
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_constant                  $1 = 0x3F800000 (1.0)
copy_constant                  $2 = 0
copy_constant                  $3 = 0x3F800000 (1.0)
copy_3_slots_unmasked          $4..6 = expectedB(0..2)
cmpeq_3_floats                 $1..3 = equal($1..3, $4..6)
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_constant                  $1 = 0x3F800000 (1.0)
copy_constant                  $2 = 0
splat_2_constants              $3..4 = 0x3F800000 (1.0)
copy_4_slots_unmasked          $5..8 = expectedB
cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
bitwise_and_2_ints             $1..2 &= $3..4
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_uniform                   $1 = colorRed(0)
copy_uniform                   $2 = colorGreen(0)
copy_constant                  $3 = 0xBFA00000 (-1.25)
smoothstep_n_floats            $1 = smoothstep($1, $2, $3)
copy_slot_unmasked             $2 = expectedB(0)
cmpeq_float                    $1 = equal($1, $2)
bitwise_and_int                $0 &= $1
copy_2_uniforms                $1..2 = colorRed(0..1)
copy_2_uniforms                $3..4 = colorGreen(0..1)
copy_constant                  $5 = 0xBFA00000 (-1.25)
copy_constant                  $6 = 0
smoothstep_n_floats            $1..2 = smoothstep($1..2, $3..4, $5..6)
copy_2_slots_unmasked          $3..4 = expectedB(0..1)
cmpeq_2_floats                 $1..2 = equal($1..2, $3..4)
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_3_uniforms                $1..3 = colorRed(0..2)
copy_3_uniforms                $4..6 = colorGreen(0..2)
copy_constant                  $7 = 0xBFA00000 (-1.25)
copy_constant                  $8 = 0
copy_constant                  $9 = 0x3F400000 (0.75)
smoothstep_n_floats            $1..3 = smoothstep($1..3, $4..6, $7..9)
copy_3_slots_unmasked          $4..6 = expectedB(0..2)
cmpeq_3_floats                 $1..3 = equal($1..3, $4..6)
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_4_uniforms                $1..4 = colorRed
copy_4_uniforms                $5..8 = colorGreen
copy_4_slots_unmasked          $9..12 = constVal
smoothstep_n_floats            $1..4 = smoothstep($1..4, $5..8, $9..12)
copy_4_slots_unmasked          $5..8 = expectedB
cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
bitwise_and_2_ints             $1..2 &= $3..4
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
swizzle_4                      $0..3 = ($0..3).xxxx
copy_4_uniforms                $4..7 = colorRed
copy_4_uniforms                $8..11 = colorGreen
mix_4_ints                     $0..3 = mix($4..7, $8..11, $0..3)
load_src                       src.rgba = $0..3
