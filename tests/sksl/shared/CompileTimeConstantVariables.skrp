store_src_rg                   v0..1 = src.rg
init_lane_masks                CondMask = LoopMask = RetMask = true
copy_constant                  kConstant = 0
copy_constant                  kOtherConstant = 0x00000001 (1.401298e-45)
copy_constant                  kAnotherConstant = 0x00000002 (2.802597e-45)
copy_constant                  kFloatConstant = 0x4008F5C3 (2.14)
copy_slot_unmasked             kFloatConstantAlias = kFloatConstant
copy_constant                  kConstVec(0) = 0x3F800000 (1.0)
copy_constant                  kConstVec(1) = 0x3E4CCCCD (0.2)
copy_constant                  kConstVec(2) = 0x4008F5C3 (2.14)
copy_constant                  kConstVec(3) = 0x3F800000 (1.0)
copy_constant                  kLocalFloatConstant = 0x4048F5C3 (3.14)
copy_slot_unmasked             kLocalFloatConstantAlias = kLocalFloatConstant
copy_uniform                   $0 = colorGreen(1)
cast_to_int_from_float         $0 = FloatToInt($0)
copy_slot_unmasked             integerInput = $0
store_condition_mask           $0 = CondMask
copy_slot_unmasked             $1 = integerInput
copy_slot_unmasked             $2 = kConstant
cmpeq_int                      $1 = equal($1, $2)
merge_condition_mask           CondMask = $0 & $1
splat_4_constants              $2..5 = 0x4008F5C3 (2.14)
copy_4_slots_masked            [main].result = Mask($2..5)
bitwise_not_int                $1 = ~$1
merge_condition_mask           CondMask = $0 & $1
store_condition_mask           $2 = CondMask
copy_slot_unmasked             $3 = integerInput
copy_slot_unmasked             $4 = kOtherConstant
cmpeq_int                      $3 = equal($3, $4)
merge_condition_mask           CondMask = $2 & $3
copy_4_uniforms                $4..7 = colorGreen
copy_4_slots_masked            [main].result = Mask($4..7)
bitwise_not_int                $3 = ~$3
merge_condition_mask           CondMask = $2 & $3
store_condition_mask           $4 = CondMask
copy_slot_unmasked             $5 = integerInput
copy_slot_unmasked             $6 = kAnotherConstant
cmpeq_int                      $5 = equal($5, $6)
merge_condition_mask           CondMask = $4 & $5
copy_4_slots_unmasked          $6..9 = kConstVec
copy_4_slots_masked            [main].result = Mask($6..9)
bitwise_not_int                $5 = ~$5
merge_condition_mask           CondMask = $4 & $5
copy_slot_unmasked             $6 = kLocalFloatConstantAlias
copy_uniform                   $7 = colorGreen(0)
copy_slot_unmasked             $8 = kLocalFloatConstant
mul_float                      $7 *= $8
cmplt_float                    $6 = lessThan($6, $7)
branch_if_no_active_lanes_eq   branch +4 (label 0 at #53) if no lanes of $6 == 0xFFFFFFFF
splat_4_constants              $7..10 = 0x4048F5C3 (3.14)
copy_4_slots_masked            [main].result = Mask($7..10)
jump                           jump +17 (label 1 at #69)
label                          label 0
copy_uniform                   $7 = colorGreen(0)
copy_slot_unmasked             $8 = kFloatConstantAlias
mul_float                      $7 *= $8
copy_slot_unmasked             $8 = kFloatConstantAlias
cmple_float                    $7 = lessThanEqual($7, $8)
branch_if_no_active_lanes_eq   branch +4 (label 2 at #63) if no lanes of $7 == 0xFFFFFFFF
splat_4_constants              $8..11 = 0
copy_4_slots_masked            [main].result = Mask($8..11)
jump                           jump +6 (label 3 at #68)
label                          label 0x00000002
copy_constant                  $8 = 0x3F800000 (1.0)
splat_2_constants              $9..10 = 0
copy_constant                  $11 = 0x3F800000 (1.0)
copy_4_slots_masked            [main].result = Mask($8..11)
label                          label 0x00000003
label                          label 0x00000001
load_condition_mask            CondMask = $4
load_condition_mask            CondMask = $2
load_condition_mask            CondMask = $0
load_src                       src.rgba = [main].result
