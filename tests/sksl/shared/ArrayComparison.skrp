store_src_rg                   coords = src.rg
init_lane_masks                CondMask = LoopMask = RetMask = true
copy_constant                  f1[0] = 0x3F800000 (1.0)
copy_constant                  f1[1] = 0x40000000 (2.0)
copy_constant                  f1[2] = 0x40400000 (3.0)
copy_constant                  f1[3] = 0x40800000 (4.0)
copy_constant                  f1[4] = 0x40A00000 (5.0)
copy_constant                  f2[0] = 0x3F800000 (1.0)
copy_constant                  f2[1] = 0x40000000 (2.0)
copy_constant                  f2[2] = 0x40400000 (3.0)
copy_constant                  f2[3] = 0x40800000 (4.0)
copy_constant                  f2[4] = 0x40A00000 (5.0)
copy_constant                  f3[0] = 0x3F800000 (1.0)
copy_constant                  f3[1] = 0x40000000 (2.0)
copy_constant                  f3[2] = 0x40400000 (3.0)
copy_constant                  f3[3] = 0xC0800000 (-4.0)
copy_constant                  f3[4] = 0x40A00000 (5.0)
copy_constant                  v1[0](0) = 0x00000001 (1.401298e-45)
copy_constant                  v1[0](1) = 0x00000002 (2.802597e-45)
copy_constant                  v1[0](2) = 0x00000003 (4.203895e-45)
copy_constant                  v1[1](0) = 0x00000004 (5.605194e-45)
copy_constant                  v1[1](1) = 0x00000005 (7.006492e-45)
copy_constant                  v1[1](2) = 0x00000006 (8.407791e-45)
copy_constant                  v2[0](0) = 0x00000001 (1.401298e-45)
copy_constant                  v2[0](1) = 0x00000002 (2.802597e-45)
copy_constant                  v2[0](2) = 0x00000003 (4.203895e-45)
copy_constant                  v2[1](0) = 0x00000004 (5.605194e-45)
copy_constant                  v2[1](1) = 0x00000005 (7.006492e-45)
copy_constant                  v2[1](2) = 0x00000006 (8.407791e-45)
copy_constant                  v3[0](0) = 0x00000001 (1.401298e-45)
copy_constant                  v3[0](1) = 0x00000002 (2.802597e-45)
copy_constant                  v3[0](2) = 0x00000003 (4.203895e-45)
copy_constant                  v3[1](0) = 0x00000004 (5.605194e-45)
copy_constant                  v3[1](1) = 0x00000005 (7.006492e-45)
copy_constant                  v3[1](2) = 0xFFFFFFFA
copy_constant                  $0 = 0
copy_constant                  $1 = 0x3F800000 (1.0)
swizzle_4                      $0..3 = ($0..3).yxxy
copy_constant                  $4 = 0
copy_constant                  $5 = 0x40000000 (2.0)
swizzle_4                      $4..7 = ($4..7).yxxy
copy_constant                  m1[2](0) = 0x40400000 (3.0)
copy_constant                  m1[2](1) = 0x40800000 (4.0)
copy_constant                  m1[2](2) = 0x40A00000 (5.0)
copy_constant                  m1[2](3) = 0x40C00000 (6.0)
copy_4_slots_unmasked          m1[0] = $0..3
copy_4_slots_unmasked          m1[1] = $4..7
copy_constant                  $0 = 0
copy_constant                  $1 = 0x3F800000 (1.0)
swizzle_4                      $0..3 = ($0..3).yxxy
copy_constant                  $4 = 0
copy_constant                  $5 = 0x40000000 (2.0)
swizzle_4                      $4..7 = ($4..7).yxxy
copy_constant                  m2[2](0) = 0x40400000 (3.0)
copy_constant                  m2[2](1) = 0x40800000 (4.0)
copy_constant                  m2[2](2) = 0x40A00000 (5.0)
copy_constant                  m2[2](3) = 0x40C00000 (6.0)
copy_4_slots_unmasked          m2[0] = $0..3
copy_4_slots_unmasked          m2[1] = $4..7
copy_constant                  $0 = 0
copy_constant                  $1 = 0x3F800000 (1.0)
swizzle_4                      $0..3 = ($0..3).yxxy
copy_constant                  $4 = 0x40000000 (2.0)
copy_constant                  $5 = 0x40400000 (3.0)
copy_constant                  $6 = 0x40800000 (4.0)
copy_constant                  $7 = 0x40A00000 (5.0)
copy_constant                  $8 = 0
copy_constant                  $9 = 0x40C00000 (6.0)
swizzle_4                      $8..11 = ($8..11).yxxy
copy_4_slots_unmasked          m3[0] = $0..3
copy_4_slots_unmasked          m3[1] = $4..7
copy_4_slots_unmasked          m3[2] = $8..11
copy_constant                  s1[0].x = 0x00000001 (1.401298e-45)
copy_constant                  s1[0].y = 0x00000002 (2.802597e-45)
copy_constant                  s1[1].x = 0x00000003 (4.203895e-45)
copy_constant                  s1[1].y = 0x00000004 (5.605194e-45)
copy_constant                  s1[2].x = 0x00000005 (7.006492e-45)
copy_constant                  s1[2].y = 0x00000006 (8.407791e-45)
copy_constant                  s2[0].x = 0x00000001 (1.401298e-45)
copy_constant                  s2[0].y = 0x00000002 (2.802597e-45)
splat_2_constants              s2[1].x, s2[1].y = 0
copy_constant                  s2[2].x = 0x00000005 (7.006492e-45)
copy_constant                  s2[2].y = 0x00000006 (8.407791e-45)
copy_constant                  s3[0].x = 0x00000001 (1.401298e-45)
copy_constant                  s3[0].y = 0x00000002 (2.802597e-45)
copy_constant                  s3[1].x = 0x00000003 (4.203895e-45)
copy_constant                  s3[1].y = 0x00000004 (5.605194e-45)
copy_constant                  s3[2].x = 0x00000005 (7.006492e-45)
copy_constant                  s3[2].y = 0x00000006 (8.407791e-45)
copy_4_slots_unmasked          $0..3 = f1[0], f1[1], f1[2], f1[3]
copy_4_slots_unmasked          $4..7 = f1[4], f2[0], f2[1], f2[2]
copy_2_slots_unmasked          $8..9 = f2[3], f2[4]
cmpeq_n_floats                 $0..4 = equal($0..4, $5..9)
bitwise_and_2_ints             $1..2 &= $3..4
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_4_slots_unmasked          $1..4 = f1[0], f1[1], f1[2], f1[3]
copy_slot_unmasked             $5 = f1[4]
copy_4_slots_unmasked          $6..9 = f3[0], f3[1], f3[2], f3[3]
copy_slot_unmasked             $10 = f3[4]
cmpne_n_floats                 $1..5 = notEqual($1..5, $6..10)
bitwise_or_2_ints              $2..3 |= $4..5
bitwise_or_int                 $2 |= $3
bitwise_or_int                 $1 |= $2
bitwise_and_int                $0 &= $1
copy_4_uniforms                $1..4 = testArray[0], testArray[1], testArray[2], testArray[3]
copy_4_uniforms                $5..8 = testArray[4], testArrayNegative[0], testArrayNegative[1], testArrayNegative[2]
copy_2_uniforms                $9..10 = testArrayNegative[3], testArrayNegative[4]
cmpne_n_floats                 $1..5 = notEqual($1..5, $6..10)
bitwise_or_2_ints              $2..3 |= $4..5
bitwise_or_int                 $2 |= $3
bitwise_or_int                 $1 |= $2
bitwise_and_int                $0 &= $1
copy_4_uniforms                $1..4 = testArray[0], testArray[1], testArray[2], testArray[3]
copy_uniform                   $5 = testArray[4]
copy_4_slots_unmasked          $6..9 = f1[0], f1[1], f1[2], f1[3]
copy_slot_unmasked             $10 = f1[4]
cmpeq_n_floats                 $1..5 = equal($1..5, $6..10)
bitwise_and_2_ints             $2..3 &= $4..5
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_4_uniforms                $1..4 = testArray[0], testArray[1], testArray[2], testArray[3]
copy_uniform                   $5 = testArray[4]
copy_4_slots_unmasked          $6..9 = f3[0], f3[1], f3[2], f3[3]
copy_slot_unmasked             $10 = f3[4]
cmpne_n_floats                 $1..5 = notEqual($1..5, $6..10)
bitwise_or_2_ints              $2..3 |= $4..5
bitwise_or_int                 $2 |= $3
bitwise_or_int                 $1 |= $2
bitwise_and_int                $0 &= $1
copy_4_slots_unmasked          $1..4 = f1[0], f1[1], f1[2], f1[3]
copy_slot_unmasked             $5 = f1[4]
copy_4_uniforms                $6..9 = testArray[0], testArray[1], testArray[2], testArray[3]
copy_uniform                   $10 = testArray[4]
cmpeq_n_floats                 $1..5 = equal($1..5, $6..10)
bitwise_and_2_ints             $2..3 &= $4..5
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_4_slots_unmasked          $1..4 = f3[0], f3[1], f3[2], f3[3]
copy_slot_unmasked             $5 = f3[4]
copy_4_uniforms                $6..9 = testArray[0], testArray[1], testArray[2], testArray[3]
copy_uniform                   $10 = testArray[4]
cmpne_n_floats                 $1..5 = notEqual($1..5, $6..10)
bitwise_or_2_ints              $2..3 |= $4..5
bitwise_or_int                 $2 |= $3
bitwise_or_int                 $1 |= $2
bitwise_and_int                $0 &= $1
copy_3_slots_unmasked          $1..3 = v1[0]
copy_3_slots_unmasked          $4..6 = v2[0]
cmpeq_3_ints                   $1..3 = equal($1..3, $4..6)
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
copy_3_slots_unmasked          $2..4 = v1[1]
copy_3_slots_unmasked          $5..7 = v2[1]
cmpeq_3_ints                   $2..4 = equal($2..4, $5..7)
bitwise_and_int                $3 &= $4
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_3_slots_unmasked          $1..3 = v1[0]
copy_3_slots_unmasked          $4..6 = v3[0]
cmpne_3_ints                   $1..3 = notEqual($1..3, $4..6)
bitwise_or_int                 $2 |= $3
bitwise_or_int                 $1 |= $2
copy_3_slots_unmasked          $2..4 = v1[1]
copy_3_slots_unmasked          $5..7 = v3[1]
cmpne_3_ints                   $2..4 = notEqual($2..4, $5..7)
bitwise_or_int                 $3 |= $4
bitwise_or_int                 $2 |= $3
bitwise_or_int                 $1 |= $2
bitwise_and_int                $0 &= $1
copy_4_slots_unmasked          $1..4 = m1[0]
copy_4_slots_unmasked          $5..8 = m2[0]
cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
bitwise_and_2_ints             $1..2 &= $3..4
bitwise_and_int                $1 &= $2
copy_4_slots_unmasked          $2..5 = m1[1]
copy_4_slots_unmasked          $6..9 = m2[1]
cmpeq_4_floats                 $2..5 = equal($2..5, $6..9)
bitwise_and_2_ints             $2..3 &= $4..5
bitwise_and_int                $2 &= $3
copy_4_slots_unmasked          $3..6 = m1[2]
copy_4_slots_unmasked          $7..10 = m2[2]
cmpeq_4_floats                 $3..6 = equal($3..6, $7..10)
bitwise_and_2_ints             $3..4 &= $5..6
bitwise_and_int                $3 &= $4
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_4_slots_unmasked          $1..4 = m1[0]
copy_4_slots_unmasked          $5..8 = m3[0]
cmpne_4_floats                 $1..4 = notEqual($1..4, $5..8)
bitwise_or_2_ints              $1..2 |= $3..4
bitwise_or_int                 $1 |= $2
copy_4_slots_unmasked          $2..5 = m1[1]
copy_4_slots_unmasked          $6..9 = m3[1]
cmpne_4_floats                 $2..5 = notEqual($2..5, $6..9)
bitwise_or_2_ints              $2..3 |= $4..5
bitwise_or_int                 $2 |= $3
copy_4_slots_unmasked          $3..6 = m1[2]
copy_4_slots_unmasked          $7..10 = m3[2]
cmpne_4_floats                 $3..6 = notEqual($3..6, $7..10)
bitwise_or_2_ints              $3..4 |= $5..6
bitwise_or_int                 $3 |= $4
bitwise_or_int                 $2 |= $3
bitwise_or_int                 $1 |= $2
bitwise_and_int                $0 &= $1
copy_slot_unmasked             $1 = s1[0].x
copy_slot_unmasked             $2 = s2[0].x
cmpne_int                      $1 = notEqual($1, $2)
copy_slot_unmasked             $2 = s1[0].y
copy_slot_unmasked             $3 = s2[0].y
cmpne_int                      $2 = notEqual($2, $3)
bitwise_or_int                 $1 |= $2
copy_slot_unmasked             $2 = s1[1].x
copy_slot_unmasked             $3 = s2[1].x
cmpne_int                      $2 = notEqual($2, $3)
copy_slot_unmasked             $3 = s1[1].y
copy_slot_unmasked             $4 = s2[1].y
cmpne_int                      $3 = notEqual($3, $4)
bitwise_or_int                 $2 |= $3
copy_slot_unmasked             $3 = s1[2].x
copy_slot_unmasked             $4 = s2[2].x
cmpne_int                      $3 = notEqual($3, $4)
copy_slot_unmasked             $4 = s1[2].y
copy_slot_unmasked             $5 = s2[2].y
cmpne_int                      $4 = notEqual($4, $5)
bitwise_or_int                 $3 |= $4
bitwise_or_int                 $2 |= $3
bitwise_or_int                 $1 |= $2
bitwise_and_int                $0 &= $1
copy_slot_unmasked             $1 = s3[0].x
copy_slot_unmasked             $2 = s1[0].x
cmpeq_int                      $1 = equal($1, $2)
copy_slot_unmasked             $2 = s3[0].y
copy_slot_unmasked             $3 = s1[0].y
cmpeq_int                      $2 = equal($2, $3)
bitwise_and_int                $1 &= $2
copy_slot_unmasked             $2 = s3[1].x
copy_slot_unmasked             $3 = s1[1].x
cmpeq_int                      $2 = equal($2, $3)
copy_slot_unmasked             $3 = s3[1].y
copy_slot_unmasked             $4 = s1[1].y
cmpeq_int                      $3 = equal($3, $4)
bitwise_and_int                $2 &= $3
copy_slot_unmasked             $3 = s3[2].x
copy_slot_unmasked             $4 = s1[2].x
cmpeq_int                      $3 = equal($3, $4)
copy_slot_unmasked             $4 = s3[2].y
copy_slot_unmasked             $5 = s1[2].y
cmpeq_int                      $4 = equal($4, $5)
bitwise_and_int                $3 &= $4
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
swizzle_4                      $0..3 = ($0..3).xxxx
copy_4_uniforms                $4..7 = colorRed
copy_4_uniforms                $8..11 = colorGreen
mix_4_ints                     $0..3 = mix($4..7, $8..11, $0..3)
load_src                       src.rgba = $0..3
